<?xml version="1.0" ?>
<launch>
        <arg name="robot_name" default="ur5" />

	<arg name="robot_name1"  default="ur5" />
	<arg name="robot_name2"  default="ur5_2" />

        <arg name="gripper" default="false" />
        <arg name="soft_gripper" default="false" />
        <arg name="rviz" default="true" />
        <arg name="gui" default="true" />
        <arg name="rviz_conf" default="$(find ur_description)/rviz/multiple_robots.rviz"/>
	<arg name="task_period" default="0.004" />

	<arg name="world_name" default="tavolo.world"/>
 	<arg name="position_controllers" value="joint_group_pos_controller" />
	<arg name="torque_controllers" value="ros_impedance_controller" />

	<arg name="spawn_x" default="0.5" />
	<arg name="spawn_y" default="0.35" />
	<arg name="spawn_z" default="1.8" />
        <arg name="use_torque_control" default="false" />
 	<arg name="gazebo" value="true" />
	<arg name="physics" default="ode" />

        <!-- load robot name into param server-->
        <param name="robot_name" type="str" value="$(arg robot_name)" />



         <!-- 1 - load the robot URDF as robot_description into param server (this will have to contain ros_control plugin and transmissions) -->
          <arg name="joint_limit_params" default="$(find ur_description)/config/ur5e/joint_limits.yaml"/>
          <arg name="kinematics_params" default="$(find ur_description)/config/ur5e/default_kinematics.yaml"/>
          <arg name="physical_params" default="$(find ur_description)/config/ur5e/physical_parameters.yaml"/>
          <arg name="visual_params" default="$(find ur_description)/config/ur5e/visual_parameters.yaml"/>
  

     	<!-- 2 launch gzserver (with empty world)/ gzcclient: Starts Gazebo and load the empty world if requested to do so - -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch" >
		<arg name="world_name" value="$(find ros_impedance_controller)/worlds/$(arg world_name)"/>
                <arg name="paused" default="true" />
		<arg name="physics" default="$(arg physics)" />
                <arg name="use_sim_time" default="true" />
                <arg name="gui" value="$(arg gui)" />
                <arg name="headless" default="false" />
                <arg name="debug" default="false" />
                <arg name="verbose" value="true" />
        </include>


  	<group ns="$(arg robot_name1)">


    
		<group if="$(arg use_torque_control)">
		  <include file="$(find ur_description)/launch/upload.launch">
			    <arg name="gazebo" value="$(arg gazebo)" />
			    <arg name="joint_limit_params" value="$(arg joint_limit_params)"/>
			    <arg name="kinematics_params" value="$(arg kinematics_params)"/>
			    <arg name="physical_params" value="$(arg physical_params)"/>
			    <arg name="visual_params" value="$(arg visual_params)"/>
		     	    <arg name="transmission_hw_interface" value="hardware_interface/EffortJointInterface"/>
		    	    <arg name="gripper" value="$(arg gripper)"/>
		    	    <arg name="soft_gripper" value="$(arg soft_gripper)"/>
		
			</include>

		      
		</group>
		
	  	<group unless="$(arg use_torque_control)">
			 <include file="$(find ur_description)/launch/upload.launch">
			    <arg name="gazebo" value="$(arg gazebo)" />
			    <arg name="joint_limit_params" value="$(arg joint_limit_params)"/>
			    <arg name="kinematics_params" value="$(arg kinematics_params)"/>
			    <arg name="physical_params" value="$(arg physical_params)"/>
			    <arg name="visual_params" value="$(arg visual_params)"/>
		     	    <arg name="transmission_hw_interface" value="hardware_interface/PositionJointInterface"/>
			    <arg name="gripper" value="$(arg gripper)"/>
			    <arg name="soft_gripper" value="$(arg soft_gripper)"/>
			
			  </include>     

		</group>


		<param name="tf_prefix" value="$(arg robot_name1)" />

		<!-- 3 Spawn a robot (described in robot_description) into Gazebo -->
		<node name="spawn_gazebo_model_$(arg robot_name1)" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model $(arg robot_name1) -x $(arg spawn_x) -y  -2 -z $(arg spawn_z)"/>
		
		<rosparam file="$(find ros_impedance_controller)/config/joint_state_publisher.yaml"  command="load"/> 	


	 	<rosparam file="$(find ur_description)/config/ur5e/ur5e_controllers.yaml"  command="load"/>


	 	<rosparam file="$(find ur_description)/config/ros_impedance_controller.yaml" command="load"/>



		<node name="controller_manager" pkg="controller_manager" type="spawner" respawn="true" ns="/$(arg robot_name1)" 
			output="screen"  args=" --namespace=/$(arg robot_name1)  joint_state_publisher $(arg position_controllers) --shutdown-timeout 1" />


		 <node pkg="robot_state_publisher" type="robot_state_publisher" 
			  name="robot_state_publisher" output="screen"/>

		<node name="goto0" pkg="ur_description" type="go0" args="1.0" output="screen"/>
	</group>


 `	<group ns="$(arg robot_name2)">


    
		<group if="$(arg use_torque_control)">
		  <include file="$(find ur_description)/launch/upload.launch">
			    <arg name="gazebo" value="$(arg gazebo)" />
			    <arg name="joint_limit_params" value="$(arg joint_limit_params)"/>
			    <arg name="kinematics_params" value="$(arg kinematics_params)"/>
			    <arg name="physical_params" value="$(arg physical_params)"/>
			    <arg name="visual_params" value="$(arg visual_params)"/>
		     	    <arg name="transmission_hw_interface" value="hardware_interface/EffortJointInterface"/>
		    	    <arg name="gripper" value="$(arg gripper)"/>
		    	    <arg name="soft_gripper" value="$(arg soft_gripper)"/>
	
			</include>

		      
		</group>
		
	  	<group unless="$(arg use_torque_control)">
			 <include file="$(find ur_description)/launch/upload.launch">
			    <arg name="gazebo" value="$(arg gazebo)" />
			    <arg name="joint_limit_params" value="$(arg joint_limit_params)"/>
			    <arg name="kinematics_params" value="$(arg kinematics_params)"/>
			    <arg name="physical_params" value="$(arg physical_params)"/>
			    <arg name="visual_params" value="$(arg visual_params)"/>
		     	    <arg name="transmission_hw_interface" value="hardware_interface/PositionJointInterface"/>
			    <arg name="gripper" value="$(arg gripper)"/>
			    <arg name="soft_gripper" value="$(arg soft_gripper)"/>
		
			  </include>     

		</group>

 		<param name="tf_prefix" value="$(arg robot_name2)" />

		<!-- 3 Spawn a robot (described in robot_description) into Gazebo -->
		<node name="spawn_gazebo_model_$(arg robot_name2)" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model $(arg robot_name2) -x $(arg spawn_x) -y 2 -z $(arg spawn_z)"/>

		<rosparam file="$(find ros_impedance_controller)/config/joint_state_publisher.yaml"  command="load"/> 	

	 	<rosparam file="$(find ur_description)/config/ros_impedance_controller.yaml"  command="load"/>


 		<rosparam file="$(find ur_description)/config/ur5e/ur5e_controllers.yaml"  command="load"/>

		<node name="controller_manager" pkg="controller_manager" type="spawner" respawn="true" output="screen"  ns="/$(arg robot_name2)"    args="--namespace=/$(arg robot_name2) joint_state_publisher $(arg position_controllers) --shutdown-timeout 1 " />



		 <node pkg="robot_state_publisher" type="robot_state_publisher"   name="robot_state_publisher" output="screen"/>
		<node name="goto0" pkg="ur_description" type="go0" args="1.0" output="screen"/>
	</group>

	<!-- 4 -Loading  controllers settings -->
	
	<!-- TODO1 understand how to set PD gains in jointpos controller : rosparam file="$(find ur_description)/config/ur5e/sim_controller.yaml" ns="" command="load"/-->	
	
	

	


	

        <!-- 7 run rviz -->
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_conf) -f world" if="$(arg rviz)"/>

	

</launch>

